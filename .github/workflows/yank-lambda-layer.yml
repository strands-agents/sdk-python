name: Yank Lambda Layer

on:
  workflow_dispatch:
    inputs:
      layer_version:
        description: 'Layer version to yank'
        required: true
        type: string
      python_version:
        description: 'Python version'
        required: true
        default: 'ALL'
        type: choice
        options: ['ALL', '3.10', '3.11', '3.12', '3.13']
      architecture:
        description: 'Architecture'
        required: true
        default: 'ALL'
        type: choice
        options: ['ALL', 'x86_64', 'aarch64']
      region:
        description: 'AWS region'
        required: true
        default: 'ALL'
        type: choice
        # Only non opt-in regions included for now
        options: ['ALL', 'us-east-1', 'us-east-2', 'us-west-1', 'us-west-2', 'ap-south-1', 'ap-northeast-1', 'ap-northeast-2', 'ap-northeast-3', 'ap-southeast-1', 'ap-southeast-2', 'ca-central-1', 'eu-central-1', 'eu-west-1', 'eu-west-2', 'eu-west-3', 'eu-north-1', 'sa-east-1']
      confirm:
        description: 'Type "Yank Lambda Layer {layer version}" to confirm yanking the layer'
        required: true
        type: string

jobs:
  yank-layer:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        python-version: ${{ inputs.python_version == 'ALL' && fromJson('["3.10", "3.11", "3.12", "3.13"]') || fromJson(format('["{0}"]', inputs.python_version)) }}
        architecture: ${{ inputs.architecture == 'ALL' && fromJson('["x86_64", "aarch64"]') || fromJson(format('["{0}"]', inputs.architecture)) }}
        region: ${{ inputs.region == 'ALL' && fromJson('["us-east-1", "us-east-2", "us-west-1", "us-west-2", "ap-south-1", "ap-northeast-1", "ap-northeast-2", "ap-northeast-3", "ap-southeast-1", "ap-southeast-2", "ca-central-1", "eu-central-1", "eu-west-1", "eu-west-2", "eu-west-3", "eu-north-1", "sa-east-1"]') || fromJson(format('["{0}"]', inputs.region)) }}

    permissions:
      id-token: write

    steps:
      - name: Validate confirmation
        run: |
          CONFIRM="${{ inputs.confirm }}"
          EXPECTED="Yank Lambda Layer ${{ inputs.layer_version }}"
          if [ "$CONFIRM" != "$EXPECTED" ]; then
            echo "Confirmation failed. You must type exactly '$EXPECTED' to proceed."
            exit 1
          fi
          echo "Confirmation validated"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.STRANDS_LAMBDA_LAYER_PUBLISHER_ROLE }}
          aws-region: ${{ matrix.region }}

      - name: Yank layer
        run: |
          PYTHON_VERSION="${{ matrix.python-version }}"
          ARCH="${{ matrix.architecture }}"
          REGION="${{ matrix.region }}"
          LAYER_NAME="strands-agents-py${PYTHON_VERSION//./_}-${ARCH}"
          LAYER_VERSION="${{ inputs.layer_version }}"

          echo "Attempting to yank layer $LAYER_NAME version $LAYER_VERSION in region $REGION"

          # Delete the layer version completely
          aws lambda delete-layer-version \
            --layer-name $LAYER_NAME \
            --version-number $LAYER_VERSION \
            --region "$REGION"

          echo "Completed yank attempt for layer $LAYER_NAME version $LAYER_VERSION in region $REGION"